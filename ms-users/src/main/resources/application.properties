spring.application.name=ms-users

server.port= ${PORT:0}
server.servlet.context-path=/api/v2/

eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.service-url.defaultZone= http://localhost:8761/eureka

#Constants
dh.keycloak.realm=TiendaDigital
dh.keycloak.serverUrl=http://localhost:8080/
dh.keycloak.clientId=api-gateway-client
dh.keycloak.clientSecret=yT5xxYtvwCZZDFDJeE3w0oOxmff0uktK

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/TiendaDigital

#Configuracion para que funcione por URL en el navegador
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway-client
spring.security.oauth2.client.registration.keycloak.client-secret=yT5xxYtvwCZZDFDJeE3w0oOxmff0uktK
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/TiendaDigital/protocol/openid-connect/token

#Configuracion para que funcione con Postman en vez de por URL en el navegador
spring.security.oauth2.client.provider.api-gateway-service.issuer-uri=http://localhost:8080/realms/TiendaDigital
spring.security.oauth2.client.registration.api-gateway-service.provider=api-gateway-service
spring.security.oauth2.client.registration.api-gateway-service.client-id=api-gateway-client
spring.security.oauth2.client.registration.api-gateway-service.client-secret=yT5xxYtvwCZZDFDJeE3w0oOxmff0uktK
spring.security.oauth2.client.registration.api-gateway-service.scope=openid
spring.security.oauth2.client.registration.api-gateway-service.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-gateway-service.redirect-uri=http://localhost:8090/login/oauth2/code/keycloak
