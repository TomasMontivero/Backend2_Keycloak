# Puerto del gateway:
server.port=8090

# Nombre de la aplicacion:
spring.application.name=ms-gateway

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.cloud.gateway.routes[0].id=ms-bill
spring.cloud.gateway.routes[0].uri=lb://ms-bill
spring.cloud.gateway.routes[0].predicates=Path=/api/v1/**
#spring.cloud.gateway.routes[0].filters=StripPrefix=2
spring.cloud.gateway.routes[1].id=ms-users
spring.cloud.gateway.routes[1].uri=lb://ms-users
spring.cloud.gateway.routes[1].predicates=Path=/api/v2/**
#spring.cloud.gateway.routes={id=ms-bill, uri=lb://ms-bill, predicates=[Path=/api/v1/**]}, {id=ms-users, uri=lb://ms-users, predicates=[Path=/api/v1/**]}

# Confiuracion para conectarse a keycloak
spring.security.oauth2.client.provider.api-keycloak-provider.issuer-uri=http://localhost:8080/realms/TrabajoPracticoParcial
spring.security.oauth2.client.registration.api-gateway-service.provider=api-keycloak-provider
spring.security.oauth2.client.registration.api-gateway-service.client-id=api-gateway-client
spring.security.oauth2.client.registration.api-gateway-service.client-secret=Rkz121eXoGFIdyvEuooksx8vhiWGjpPF
spring.security.oauth2.client.registration.api-gateway-service.scope=openid
spring.security.oauth2.client.registration.api-gateway-service.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-gateway-service.redirect-uri=http://localhost:8090/login/oauth2/code/keycloak

# Indica a gateway que tome el token que llega en la peticion y lo agregue al ruteo hacia el microservicio
spring.cloud.gateway.default-filters=TokenRelay


spring.management.endpoint.gateway.enabled=true
spring.management.endpoints.web.exposure.include=gateway
